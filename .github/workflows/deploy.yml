name: build-and-deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: infra/Dockerfile
          target: api
          push: false
          tags: stocks-scraper-api:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build Scraper image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: infra/Dockerfile
          target: scraper
          push: false
          tags: stocks-scraper-scraper:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy compose and infra files to VM and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script_stop: true
          script: |
            set -euxo pipefail
            # Create app dir if missing
            mkdir -p ~/stocks-scraper
            cd ~/stocks-scraper

            # Pull latest code
            if [ -d .git ]; then
              git fetch --all
              git reset --hard origin/main
            else
              git clone ${{ secrets.REPO_SSH_URL }} .
            fi

            # Build and (re)start services
            docker compose -f infra/docker-compose.yml build
            docker compose -f infra/docker-compose.yml up -d

            # Show status
            docker compose -f infra/docker-compose.yml ps
